enum Filter:String{
    case None = "without"
    case Gingham = "warm"
    case Moon = "black"
    case Slumber = "cold"
    case Ludwig = "black-white"
    case Lark = "blue"
}

class Post{
    var name:String{""}
    var publishedDate:String
    var reaction: Reaction
    init(publishedDate: String, reaction: Reaction){
        self.publishedDate = publishedDate
        self.reaction = reaction
    }
}
class Photo: Post{
    override var name:String{"Photo"}
    var numberPhotos:Int
    var filter:Filter
    init(numberPhotos: Int, filter:Filter, publishedDate:String, reaction:Reaction){
        self.numberPhotos = numberPhotos
        self.filter = filter
        super.init(publishedDate: publishedDate, reaction: reaction)
    }
}


class Reels: Post{
    override var name:String{"Reels"}
    var numberViews:Int
    var lengthVideo:Double
    init(numberViews: Int, lengthVideo:Double, publishedDate:String, reaction:Reaction){
        self.numberViews = numberViews
        self.lengthVideo = lengthVideo
        super.init(publishedDate: publishedDate, reaction: reaction)
    }
}

struct Reaction{
    var likesNumber=0
    var commentsNumber=0
}
struct User{
    var nickName:String
    var post: Post
    init(nickName: String, post:Post){
        self.nickName = nickName
        self.post = post
    }
}

func printInfo(_ user: User){
    var tmp=0
    var likesNumber = String(user.post.reaction.likesNumber)
    if let reelsPost = user.post as? Reels {
        var viewsNumber = String(reelsPost.numberViews)
        if reelsPost.numberViews > 1000{
            tmp = reelsPost.numberViews/1000
            viewsNumber = "\(tmp)k"
        }else{
            viewsNumber = String(reelsPost.numberViews)
        }
        
        print("User name: \( user.nickName) | Post type: \(user.post.name) | Published data: \(user.post.publishedDate) | Number of likes: \(likesNumber) | Number of views: \(viewsNumber) | Number of comments: \(user.post.reaction.commentsNumber)")
        
    } 
    if let photoPost = user.post as? Photo {
        if user.post.reaction.likesNumber > 1000{
            tmp = user.post.reaction.likesNumber/1000
            likesNumber = "\(tmp)k"
        }else{
            likesNumber = String(user.post.reaction.likesNumber)
        }
       
       let filter = photoPost.filter.rawValue
        
        print("User name: \( user.nickName) | Post type: \(user.post.name) | filter: \(filter) | Published data: \(user.post.publishedDate) | Number of likes: \(likesNumber) | Number of comments: \(user.post.reaction.commentsNumber)")
    
    }
}

var users = [User]()

users.append(User(nickName: "ramencorgi", post: Photo(numberPhotos: 1, filter:Filter.None, publishedDate: "03.03.2024",reaction: Reaction(likesNumber: 2553, commentsNumber: 4))))

users.append(User(nickName: "ramencorgi", post: Reels(numberViews:21700, lengthVideo:15,publishedDate: "05.12.2023",reaction: Reaction(likesNumber: 913, commentsNumber: 7))))

users.append(User(nickName: "ramencorgi", post: Photo(numberPhotos:1, filter:Filter.Gingham, publishedDate: "05.06.2023",reaction: Reaction(likesNumber: 1992, commentsNumber: 5))))

for user in users{
    printInfo(user)
}


